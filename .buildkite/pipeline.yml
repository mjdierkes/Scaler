steps:
  - label: "üîç SwiftLint"
    command: |
      brew install swiftlint
      swiftlint
    agents:
      queue: "ios"

  - label: "üèó Build"
    command: |
      xcodebuild clean build \
        -scheme "${SCHEME_NAME}" \
        -workspace "${WORKSPACE_NAME}.xcworkspace" \
        -destination "platform=iOS Simulator,name=iPhone 14 Pro" \
        CODE_SIGNING_REQUIRED=NO \
        CODE_SIGNING_ALLOWED=NO
    agents:
      queue: "ios"

  - label: "üß™ Unit Tests"
    command: |
      xcodebuild test \
        -scheme "${SCHEME_NAME}" \
        -workspace "${WORKSPACE_NAME}.xcworkspace" \
        -destination "platform=iOS Simulator,name=iPhone 14 Pro" \
        CODE_SIGNING_REQUIRED=NO \
        CODE_SIGNING_ALLOWED=NO
    agents:
      queue: "ios"

  - label: "üì± UI Tests"
    command: |
      xcodebuild test \
        -scheme "${SCHEME_NAME}" \
        -workspace "${WORKSPACE_NAME}.xcworkspace" \
        -destination "platform=iOS Simulator,name=iPhone 14 Pro" \
        -testPlan UITests \
        CODE_SIGNING_REQUIRED=NO \
        CODE_SIGNING_ALLOWED=NO
    agents:
      queue: "ios"

  - wait  # Wait for all tests to pass

  - label: "üöÄ Push to GitHub"
    command: |
      # Configure git
      git config --global user.email "ci@buildkite.com"
      git config --global user.name "Buildkite CI"
      
      # Add all changes
      git add .
      
      # Commit changes with build number
      git commit -m "Build #${BUILDKITE_BUILD_NUMBER}: CI automated push"
      
      # Push to GitHub
      git push origin HEAD:main
    branches: "main"
    agents:
      queue: "ios"